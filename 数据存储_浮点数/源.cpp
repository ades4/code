#define _CRT_SECURE_NO_WARNINGS 1 
#include <iostream>
using namespace std;

//int main()
//{
//	float f = -5.5;
//	//-101.1 = -1.011* 2^2
//	//S = 1, E = 2, M = 1.01
//	//E + 127    129 ---> 10000001    M储存时只保留小数点后面的
//	//1 10000001 01100000000000000000000
//	//1100 0000 1011 0000 0000 0000 0000 0000 转化为十六进制 
//	//C 0 B 0 0 0 0 0
//
//
//	return 0;
//}



int main()
{
	int n = 9;
	//0 00000000 00000000000000000001001 
	float *p = (float *)&n;      //将n强制类型转化为float，p指针存放的为n的地址

	printf("n的值为:%d\n", n);   //  打印结果为9
	printf("*pFloat的值为:%f\n", *p);    //%f 打印小数点后6位
	//以浮点数来读，S = 0,正数
	//E = 0,指数为-126 
	//(-1)^0 * 2 ^ -126 * 0.00000000000000000001001   因此最终打印结果为0
	
	*p = 9.0; 
	//1001.0	M:1.001    E:130 ---> 10000010
	//0 10000010 00100000000000000000000
	printf("num的值为:%d\n", n);  //%d打印时，认为上面为整形的补码，转原码
	//正数的原反补相同
	//结果为 1091567616
	printf("*pFloat的值为:%f\n", *p);   //打印结果为9.0

	system("pause");
	return 0;
}